package model;
// Generated 14/05/2015 12:02:46 by Hibernate Tools 4.3.1


import dao.DiretoriaDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Diretoria generated by hbm2java
 */
@Entity
@Table(name="diretoria"
    ,catalog="scp"
)
public class Diretoria  implements java.io.Serializable {


     private int idDiretoria;
     private String nome;

    public Diretoria() {
    }

	
    public Diretoria(int idDiretoria, String nome) {
        this.idDiretoria = idDiretoria;
        this.nome = nome;
    }
   
     @Id 

    
    @Column(name="idDiretoria", unique=true, nullable=false)
    public int getIdDiretoria() {
        return this.idDiretoria;
    }
    
    public void setIdDiretoria(int idDiretoria) {
        this.idDiretoria = idDiretoria;
    }

    
    @Column(name="nome", nullable=false, length=128)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }


public static List<Diretoria> obterDiretorias() throws ClassNotFoundException, SQLException {
        return DiretoriaDAO.obterDiretorias();
    }

    public static Diretoria obterDiretoria(int idDiretoria) throws ClassNotFoundException, SQLException {
        return DiretoriaDAO.obterDiretoria(idDiretoria);
    }

    public static List<Diretoria> obterDiretoriaProNome(String nome) throws ClassNotFoundException,
            SQLException {
        return DiretoriaDAO.obterDiretoriasPorNome(nome);
    }

    public void gravar() throws SQLException, ClassNotFoundException {
        DiretoriaDAO.gravar(this);
    }

    public void editar() throws SQLException, ClassNotFoundException {
        DiretoriaDAO.editar(this);
    }

    public void excluir() throws SQLException, ClassNotFoundException {
        DiretoriaDAO.excluir(this);
    }


}


