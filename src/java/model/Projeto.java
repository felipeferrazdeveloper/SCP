package model;
// Generated 14/05/2015 12:02:46 by Hibernate Tools 4.3.1

import dao.ProjetoDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Projeto generated by hbm2java
 */
@Entity
@Table(name = "projeto", catalog = "scp"
)
public class Projeto implements java.io.Serializable {

    private int idProjeto;
    private Aluno aluno;
    private Edital edital;
    private Professor professor;
    private String nome;
    private String palavraChave;
    private String areaConhecimento;
    private String descricao;
    private String situacao;
    private String caracterizacaoProblema;
    private String referencialTeorico;
    private String objetivos;
    private String metodologia;
    private String resultadoEsperado;
    private String inicio;
    private String fim;
    private String orcamento;
    private String referenciasBibliograficas;


    public Projeto() {
    }

    public Projeto(int idProjeto, Aluno aluno, Edital edital, Professor professor, String nome, String palavraChave, String areaConhecimento, String descricao, String situacao, String caracterizacaoProblema, String referencialTeorico, String objetivos, String metodologia, String resultadoEsperado, String inicio, String fim, String orcamento, String referenciasBibliograficas) {
        this.idProjeto = idProjeto;
        this.aluno = aluno;
        this.edital = edital;
        this.professor = professor;
        this.nome = nome;
        this.palavraChave = palavraChave;
        this.areaConhecimento = areaConhecimento;
        this.descricao = descricao;
        this.situacao = situacao;
        this.caracterizacaoProblema = caracterizacaoProblema;
        this.referencialTeorico = referencialTeorico;
        this.objetivos = objetivos;
        this.metodologia = metodologia;
        this.resultadoEsperado = resultadoEsperado;
        this.inicio = inicio;
        this.fim = fim;
        this.orcamento = orcamento;
        this.referenciasBibliograficas = referenciasBibliograficas;
    }

    

//    public Projeto(int idProjeto, String nome, String palavraChave, String areaConhecimento, String descricao, String situacao, String caracterizacaoProblema, String referencialTeorico, String objetivos, String metodologia, String resultadoEsperado, String inicio, String fim, String orcamento, String referenciasBibliograficas, Edital edital, Professor professor, Aluno aluno) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }

    @Id

    @Column(name = "idProjeto", unique = true, nullable = false)
    public int getIdProjeto() {
        return this.idProjeto;
    }

    public void setIdProjeto(int idProjeto) {
        this.idProjeto = idProjeto;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idAluno", nullable = false)
    public Aluno getAluno() {
        return this.aluno;
    }

    public void setAluno(Aluno aluno) {
        this.aluno = aluno;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idEdital", nullable = false)
    public Edital getEdital() {
        return this.edital;
    }

    public void setEdital(Edital edital) {
        this.edital = edital;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idProfessor", nullable = false)
    public Professor getProfessor() {
        return this.professor;
    }

    public void setProfessor(Professor professor) {
        this.professor = professor;
    }

    @Column(name = "nome", nullable = false, length = 128)
    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    @Column(name = "palavraChave", nullable = false, length = 128)
    public String getPalavraChave() {
        return this.palavraChave;
    }

    public void setPalavraChave(String palavraChave) {
        this.palavraChave = palavraChave;
    }

    @Column(name = "areaConhecimento", nullable = false, length = 128)
    public String getAreaConhecimento() {
        return this.areaConhecimento;
    }

    public void setAreaConhecimento(String areaConhecimento) {
        this.areaConhecimento = areaConhecimento;
    }

    @Column(name = "descricao", nullable = false, length = 1024)
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Column(name = "situacao", nullable = false, length = 1024)
    public String getSituacao() {
        return this.situacao;
    }

    public void setSituacao(String situacao) {
        this.situacao = situacao;
    }

    @Column(name = "caracterizacaoProblema", nullable = false, length = 1024)
    public String getCaracterizacaoProblema() {
        return this.caracterizacaoProblema;
    }

    public void setCaracterizacaoProblema(String caracterizacaoProblema) {
        this.caracterizacaoProblema = caracterizacaoProblema;
    }

    @Column(name = "referencialTeorico", nullable = false, length = 128)
    public String getReferencialTeorico() {
        return this.referencialTeorico;
    }

    public void setReferencialTeorico(String referencialTeorico) {
        this.referencialTeorico = referencialTeorico;
    }

    @Column(name = "objetivos", nullable = false, length = 1024)
    public String getObjetivos() {
        return this.objetivos;
    }

    public void setObjetivos(String objetivos) {
        this.objetivos = objetivos;
    }

    @Column(name = "metodologia", nullable = false, length = 128)
    public String getMetodologia() {
        return this.metodologia;
    }

    public void setMetodologia(String metodologia) {
        this.metodologia = metodologia;
    }

    @Column(name = "resultadoEsperado", nullable = false, length = 1024)
    public String getResultadoEsperado() {
        return this.resultadoEsperado;
    }

    public void setResultadoEsperado(String resultadoEsperado) {
        this.resultadoEsperado = resultadoEsperado;
    }

    @Column(name = "inicio", nullable = false, length = 128)
    public String getInicio() {
        return this.inicio;
    }

    public void setInicio(String inicio) {
        this.inicio = inicio;
    }

    @Column(name = "fim", nullable = false, length = 128)
    public String getFim() {
        return this.fim;
    }

    public void setFim(String fim) {
        this.fim = fim;
    }

    @Column(name = "orcamento", nullable = false, length = 1024)
    public String getOrcamento() {
        return this.orcamento;
    }

    public void setOrcamento(String orcamento) {
        this.orcamento = orcamento;
    }

    @Column(name = "referenciasBibliograficas", nullable = false, length = 1024)
    public String getReferenciasBibliograficas() {
        return this.referenciasBibliograficas;
    }

    public void setReferenciasBibliograficas(String referenciasBibliograficas) {
        this.referenciasBibliograficas = referenciasBibliograficas;
    }


    public static List<Projeto> obterProjetos() throws ClassNotFoundException, SQLException {
        return ProjetoDAO.obterProjetos();
    }

    public static Projeto obterProjeto(int idProjeto) throws ClassNotFoundException, SQLException {
        return ProjetoDAO.obterProjeto(idProjeto);
    }

    public static List<Projeto> obterProjetoProNome(String nome) throws ClassNotFoundException,
            SQLException {
        return ProjetoDAO.obterProjetosPorNome(nome);
    }

    public void gravar() throws SQLException, ClassNotFoundException {
        ProjetoDAO.gravar(this);
    }

    public void editar() throws SQLException, ClassNotFoundException {
        ProjetoDAO.editar(this);
    }

    public void excluir() throws SQLException, ClassNotFoundException {
        ProjetoDAO.excluir(this);
    }
    
}
